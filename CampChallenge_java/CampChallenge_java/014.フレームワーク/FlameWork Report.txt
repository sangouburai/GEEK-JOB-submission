Javaフレームワークレポート

Struts

Javaで最も有名なフレームワークの一つで、２０００年から職バージョンが開発、
現在では新型のStruts2もリリースされている。

MVCモデルを採用しており、独自のカスタムタグの利用やActionクラスとStruts-congid.xmlでの画面遷移の管理、バリデータ（入力チェック）機能の提供などが特徴である。

フレームワークとして長い歴史を持つ分、Strutsを使用して開発されたシステムは多く存在するが、脆弱性の発見などで他のフレームワークに移行するユーザーも増え、Strutsでシステムを構築する際は、脆弱性を把握したうえで取り組む必要があるだろう。





Play Framework


PlayFlameworkはGuillaume Bortによって開発されたWebアプリケーションフレームワークで、
Javaだけでなく、ScalaというJavaと親和性の高い言語でも使用可能である。


Play　FrameworkはRubyのフレームワークである「Ruby　On　Rails」、pythonの
フレームワークである「Django」に大きく影響を受けたフレームワークで、軽量さと高い生産性が特徴で、JavaのWebアプリケーション標準仕様であるJ2EEに準拠しておらず、ServletやJSPを使わずに新しい形のアプリケーション構築ができる。

また、動作時に使用するCPUリソースやメモリ使用量も少ないため、ハードウェアへの負担を抑えた
システムの構築ができるのも特徴の一つである。





Spring　Framework


Spring　Frameworkは2003年にRod　Johnsonによって開発されたDI（Dependency　Injection）コンテナと呼ばれる、環境に依存する機能を外部から提供可能とする手法が特徴的なオープンソースのフレームワークである。

Springはオブジェクトの関連付け、生成、登録などを管理する「Coreモジュール」、JavaBeansへのアクセス機能を提供する「Context　モジュール」、MVCモデルでの開発を提供する「Web MVCモジュール」など7種類のモジュールで構成されている。

SpringはWebアプリケーションだけでなく、Javaプラットフォームで動作する多くのアプリケーションに適用することができるフレームワークである。

Springを採用しているシステムも比較的多く、先日選考に言った企業でもいまアツいフレームワークと話していて、案件も増える可能性が高い。使い勝手もいいので覚えておいて損はない。





